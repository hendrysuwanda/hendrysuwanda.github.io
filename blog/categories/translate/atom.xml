<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: translate | Hendry Suwanda]]></title>
  <link href="http://hendrysuwanda.github.io/blog/categories/translate/atom.xml" rel="self"/>
  <link href="http://hendrysuwanda.github.io/"/>
  <updated>2014-02-01T13:03:27-05:00</updated>
  <id>http://hendrysuwanda.github.io/</id>
  <author>
    <name><![CDATA[Hendry Suwanda]]></name>
    <email><![CDATA[suwanda.hendry@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fungsi scala call-by-name]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/11/07/fungsi-scala-call-by-name/"/>
    <updated>2013-11-07T13:53:00-05:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/11/07/fungsi-scala-call-by-name</id>
    <content type="html"><![CDATA[<div class="alert alert-danger">
Artikel ini saya translate dari <a href="http://www.tutorialspoint.com/scala/functions_call_by_name.htm"> sini</a>. Tujuan saya translate artikel ini sebagai latihan saya dalam mempelajari bahasa inggris, disamping selain memahami isi materi artikel tersebut.

Saya akui, saya belum memiliki izin dalam melakukan translate artikel tersebut :).
</div>


<p>Umumnya, parameter-parameter fungsi adalah parameter-parameter by-value; yakni,nilai dari parameter ditentukan sebelum ia dilewatkan ke fungsi. Tapi bagaimana kalau kita perlu menulis sebuah fungsi yang menerima parameter sebuah ekspresi yang kita tidak ingin mengevaluasi nya sampai ia dipanggil didalam fungsi kita? Untuk situasi seperti ini, scala menawarkan parameter call-by-name.</p>

<p>mekanisme call-by-name melewatkan blok kode ke variable dan setiap saat variable diakses, blok kode akan eksekusi dan nilai akan hitung.</p>

<p>```scala
object Test {
   def main(args: Array[String]) {</p>

<pre><code>    delayed(time());
</code></pre>

<p>   }</p>

<p>   def time() = {</p>

<pre><code>  println("Getting time in nano seconds")
  System.nanoTime
</code></pre>

<p>   }
   def delayed( t: => Long ) = {</p>

<pre><code>  println("In delayed method")
  println("Param: " + t)
  t
</code></pre>

<p>   }
}
```</p>

<p>disini, kita mendeklarasikan method <code>delayed</code>, yang mana membutuhkan parameter <code>call-by-name</code> dengan meletakkan simbol <code>=&gt;</code> antara nama variable dengan tipe variable. Ketika kode diatas di kompile dan dieksekusi, menghasilkan hasil sebagai berikut:</p>

<p>```
C:/>scalac Test.scala
C:/>scala Test
In delayed method
Getting time in nano seconds
Param: 81303808765843
Getting time in nano seconds</p>

<p>C:/>
```</p>

<p>di sini, <code>delayed</code>  mencetak sebuah pesan yang menunjukkan bahwa telah masuk kedalam method. Kemudian, <code>delayed</code> mencetak sebuah pesan dengan nilainya. Terakhir, delayed mengembalikan <code>t</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Call by Name and Call by Value, klarifikasi diperlukan]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/11/07/call-by-name-and-call-by-value-klarifikasi-diperlukan/"/>
    <updated>2013-11-07T11:19:00-05:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/11/07/call-by-name-and-call-by-value-klarifikasi-diperlukan</id>
    <content type="html"><![CDATA[<div class="alert alert-danger">
Artikel ini saya translate dari <a href="http://stackoverflow.com/questions/13337338/call-by-name-vs-call-by-value-in-scala-clarification-needed"> sini</a>. Tujuan saya translate artikel ini sebagai latihan saya dalam mempelajari bahasa inggris, disamping selain memahami isi materi artikel tersebut.

Saya akui, saya belum memiliki izin dalam melakukan translate artikel tersebut :).
</div>


<h3>Pertanyaan</h3>

<div class="alert alert-info">
Pertanyaan ini di ajukan oleh <a href="http://stackoverflow.com/users/359862/jam">Jam</a>
</div>


<p>Seperti yang saya pahami, di Scala,fungsi dapat dipanggil dengan 2 cara:</p>

<ul>
<li>by-value, atau</li>
<li>by-name</li>
</ul>


<p>Misalnya, diberi deklarasi berikut, apakah kita tahu bagaimana fungsi akan dipanggil?</p>

<p><code>scala
def f(x: Int, y:Int) = x;
</code></p>

<p>Panggil</p>

<p><code>
f (1,2)
f (23+55,5)
f (12+3, 44*11)
</code></p>

<p>Apa ketentuannya?</p>

<h3>Jawaban</h3>

<div class="alert alert-info">
jawaban dari <a href="http://stackoverflow.com/users/247985/dhg">dhg</a>
</div>


<p>Contoh yang telah anda berikan hanya menggunakan call-by-value, jadi saya akan memberikan yang baru, sederhana, contoh yang menunjukkan perbedaan.</p>

<p>Pertama, mari kita asumsikan kita memiliki fungsi dengan <code>side-effect</code>. Fungsi ini mencetak sesuatu dan kemudian mengembalikan sebuah <code>Int</code>.</p>

<p><code>scala
def something() = {
  println("calling something")
  1 //return value
}
</code></p>

<p>Sekarang kita akan mendefinisikan dua fungsi yang menerima argumen <code>Int</code> yang persis sama kecuali yang satu membutuhkan argumen dalam gaya call-by-value <code>(x: Int)</code> dan yang lainnya dalam gaya call-by-name <code>(x: =&gt; Int)</code></p>

<p><code>scala call-by-value
def callByValue(x: Int) = {
  println("x1=" + x)
  println("x2=" + x)
}
</code></p>

<p><code>scala call-by-name
def callByName(x: =&gt; Int) = {
  println("x1=" + x)
  println("x2=" + x)  
}
</code></p>

<p>Sekarang apa yang terjadi ketika kita memanggilnya dengan fungsi <code>side-effect</code> kita?</p>

<p>```
scala> callByValue(something())
calling something
x1=1
x2=1</p>

<p>scala> callByName(something())
calling something
x1=1
calling something
x2=1
```</p>

<p>Sehingga anda dapat melihat bahwa dalam versi call-by-value, <code>side-effect</code> dari  pemanggilan fungsi <code>something()</code> hanya terjadi sekali. Namun, dalam versi call-by-name, <code>side-effect</code> terjadi dua kali.</p>

<p>Hal ini karena fungsi call-by-value menghitung nilai ekspresi yang diberikan sebelum memanggil fungsi, sehingga nilai yang sama setiap kali diakses. Namun, fungsi call-by-name menghitung ulang nilai ekspresi yang diberikan setiap kali ia diakses.</p>

<div class="alert alert-info">
jawaban dari <a href="http://stackoverflow.com/users/2291699/behrooz-tabesh">Behrooz Tabesh</a>
</div>


<p>Berikut ini adalah contoh dari Martin Odersky (penemu scala)</p>

<p><code>scala
def test (x: Int, y: Int) = x * x
</code></p>

<p>Kita ingin tahu evaluasi mana yang lebih cepat (langkah sedikit) dalam kondisi ini:</p>

<p><strong>test (2, 3)</strong></p>

<p><code>scala call-by-value
test(2, 3)
2 * 2
4
</code></p>

<p><code>scala call-by-name
test(2, 3)
2 * 2
4
</code></p>

<p>jadi 2 evaluasi disini sama</p>

<p><strong>test(3+4, 8)</strong></p>

<p><code>scala call-by-value
test(3+4, 8)
test(7, 8)
7 * 7
49
</code></p>

<p><code>scala call-by-name
test(3+4, 8)
(3+4) * (3 + 4)
7 * (3 + 4)
7 * 7
49
</code>
disini call-by-value lebih cepat</p>

<p><strong>test(7, 2*4)</strong></p>

<p><code>scala call-by-value
test(7, 2*4)
test(7, 8)
7 * 7
49
</code></p>

<p><code>scala call-by-name
test(7, 2*4)
7 * 7
49
</code></p>

<p>disini, call-by-name lebih cepat</p>

<p><strong>test(3+4, 2*4)</strong></p>

<p><code>scala call-by-value
test(3+4, 2*4)
test(7, 2*4)
test(7, 8)
7 * 7
49
</code></p>

<p><code>scala call-by-name
test(3+4, 2*4)
(3+4) * (3+4)
7 * (3+4)
7 * 7
49
</code>
lagi, keduanya sama.</p>

<div class="alert alert-info">
jawaban dari <a href="http://stackoverflow.com/users/660675/kaos12">kaos12</a>
</div>


<p>Dalam kasus conton mu semua parameter akan dievaluasi sebelum fungsi tersebut dipanggil, karena kamu hanya mendefiniskan mereka <code>by-value</code>. Jika kamu ingin mendefinisikan parameter kamu <code>by-name</code>, kamu harus melewatkan kode block:</p>

<p><code>scala
def f(x: =&gt; Int, y:Int) =x
</code></p>

<p>Dengan cara ini parameter <code>x</code> akan dievaluasi sampai dipanggil dalam fungsi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lebih lanjut tentang Judul (heading)]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/11/04/lebih-lanjut-tentang-judul-heading/"/>
    <updated>2013-11-04T10:29:00-05:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/11/04/lebih-lanjut-tentang-judul-heading</id>
    <content type="html"><![CDATA[<div class="alert alert-danger">
Artikel ini saya translate dari <a href="http://www.codecademy.com/courses/web-beginner-en-HZA3b/0/1?curriculum_id=50579fb998b470000202dc8b"> sini</a>. Tujuan saya translate artikel ini sebagai latihan saya dalam mempelajari bahasa inggris, disamping selain memahami isi materi artikel tersebut.

Saya akui, saya belum memiliki izin dalam melakukan translate artikel tersebut :).
</div>


<p>HTML sebenarnya memungkinkan kita memiliki lebih dari satu ukuran heading. Terdapat 6 ukurang heading, dimana <code>&lt;h1&gt;</code> adalah bos dan <code>&lt;h6&gt;</code> adalah  lemah.</p>

<ol>
<li><code>&lt;h1&gt;</code> &ndash; CEO</li>
<li><code>&lt;h2&gt;</code> &ndash; VP Fancy Towne</li>
<li><code>&lt;h3&gt;</code> &ndash; Direktur beberapa stuff</li>
<li><code>&lt;h4&gt;</code> &ndash; middle management</li>
<li><code>&lt;h5&gt;</code> &ndash; Asisten rendahan</li>
<li><code>&lt;h6&gt;</code> &ndash; Mendapatkan kopi untuk orang lain.</li>
</ol>


<p>Dibawah ini kami akan meminta anda untuk menambahkan heading dengan berbagai ukuran. Jangan ragu untuk menulis apapun yang anda sukan untuk heading.</p>

<h3>Latihan</h3>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;
        Headings &amp; Paragraphs
    &lt;/title&gt;

&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Ini Judul h1&lt;/h1&gt;
    &lt;p&gt;ini paragraf1&lt;/p&gt;
    &lt;p&gt;ini paragraf2&lt;/p&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<ol>
<li>Kode anda sekarang memiliki satu heading <code>&lt;h1&gt;</code> dan 2 paragraf.</li>
<li>Tambahkan sebuah heading <code>&lt;h3&gt;</code> sebelum paragraf kedua.</li>
<li>Tambahkan sebuah heading <code>&lt;h5&gt;</code> setelah paragraf ke dua, dan kemudian tambahkan paragraf ketiga setelah heading ini.</li>
</ol>


<h3>Jawaban</h3>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;
        Headings &amp; Paragraphs
    &lt;/title&gt;

&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Ini Judul h1&lt;/h1&gt;
    &lt;p&gt;ini paragraf1&lt;/p&gt;
    &lt;h3&gt;Ini judul h3&lt;/h3&gt;
    &lt;p&gt;ini paragraf2&lt;/p&gt;
    &lt;h5&gt;Ini judul h5&lt;/h5&gt;
    &lt;p&gt;ini paragraf3&lt;/p&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paragraf dan Judul (heading)]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/11/04/paragraf-dan-judul-heading/"/>
    <updated>2013-11-04T10:01:00-05:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/11/04/paragraf-dan-judul-heading</id>
    <content type="html"><![CDATA[<div class="alert alert-danger">
Artikel ini saya translate dari <a href="http://www.codecademy.com/courses/web-beginner-en-HZA3b/0/1?curriculum_id=50579fb998b470000202dc8b"> sini</a>. Tujuan saya translate artikel ini sebagai latihan saya dalam mempelajari bahasa inggris, disamping selain memahami isi materi artikel tersebut.

Saya akui, saya belum memiliki izin dalam melakukan translate artikel tersebut :).
</div>


<p>Kami pasti membuat kemajuan yang baik! Kami telah belajar kapan dan mengapa kita menggunakan HTML. Kita juga telah belajar bagaimana untuk:</p>

<ol>
<li>Membentuk file HTML dengan tag</li>
<li>Judul halaman web (di dalam <code>&lt;head&gt;</code>)</li>
<li>Membuat paragraf (di dalam <code>&lt;body&gt;</code> dengan tag <code>&lt;p&gt;</code>)</li>
</ol>


<p>Langkah selanjutnya adalah memberikan paragraf kita judul menggunakan tag judul (<code>&lt;head&gt;</code>). Mari mulai dengan tag <code>&lt;h1&gt;</code>, yang menandai sesuatu sebagai yang paling penting. (Semua orang tau font yang paling penting adalah yang paling besar!)</p>

<h3>Latihan</h3>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;
        Headings &amp; Paragraphs
    &lt;/title&gt;

&lt;/head&gt;
&lt;body&gt;




&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<ol>
<li>Tanya diri sendiri: Apa judul halaman ini?</li>
<li>Di bagian body, buat sebuah judul (heading). Untuk melakukan hal ini, buat sebuah tag <code>&lt;h1&gt;</code></li>
<li>Berikan konten anda sebuah judul. Ini bisa apapun</li>
<li>Tutup elemen dengan tag penutup <code>&lt;/h1&gt;</code>. (Judul anda sekarang harus antara <code>&lt;h1&gt;</code> dan <code>&lt;/h1&gt;</code>)</li>
<li>Dibawah judul, buat 2 paragraf menggunakan tag <code>&lt;p&gt;</code> dengan konten apapun yang anda suka.</li>
</ol>


<h3>Jawaban</h3>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;
        Headings &amp; Paragraphs
    &lt;/title&gt;

&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Ini judul&lt;/h1&gt;
    &lt;p&gt;ini paragraf 1&lt;/p&gt;
    &lt;p&gt;ini paragraf 2&lt;/p&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HTML] Paragraf dalam body]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/11/03/html-paragraf-dalam-body/"/>
    <updated>2013-11-03T13:37:00-05:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/11/03/html-paragraf-dalam-body</id>
    <content type="html"><![CDATA[<div class="alert alert-danger">
Artikel ini saya translate dari <a href="http://www.codecademy.com/courses/web-beginner-en-HZA3b/0/1?curriculum_id=50579fb998b470000202dc8b"> sini</a>. Tujuan saya translate artikel ini sebagai latihan saya dalam mempelajari bahasa inggris, disamping selain memahami isi materi artikel tersebut.

Saya akui, saya belum memiliki izin dalam melakukan translate artikel tersebut :).
</div>


<p>Kami telah menyiapkan banyak hal-hal dasar untuk file HTML untuk Anda. Hal ini sehingga anda tidak akan marah pada kami untuk terlalu banyak pengulangan, silahkan belajar dengan baik.</p>

<p>kita telah belajar tentang tag pembuka dan penutup. Ketika kita meletakkan konten diantara tag, seluruh bit disebut elemen.</p>

<p><code>html
element = &lt;opening tag&gt; + content + &lt;closing tag&gt;
</code></p>

<p>Perhatikan kita memiliki tag <code>&lt;title&gt;</code> sekarang, tapi kita butuh tag <code>&lt;body&gt;</code>. Konten dalam <code>&lt;body&gt;</code> adalah apa yang akan terlihat pada halaman yang sebenarnya. <code>&lt;body&gt;</code> masuk kedalam tag html, tapi tidak didalam tag <code>&lt;head&gt;</code>, seperti ini:</p>

<p>```html
<html></p>

<pre><code>&lt;head&gt;&lt;/head&gt;
&lt;body&gt;&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<h3>Latihan</h3>

<p>Anggap kita memiliki file HTML seperti di bawah ini</p>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;

    &lt;/title&gt;

&lt;/head&gt;
</code></pre>

<p></html>
```</p>

<ol>
<li>Antara tag <code>&lt;title&gt;</code>, berikan nama halaman anda. Ini dapat apapun.</li>
<li>Dibawah tag <code>&lt;/head&gt;</code> penutup, letakkan tag <code>&lt;body&gt;</code> pembuka dan penutup</li>
<li>Didalam <code>&lt;body&gt;</code>, mari buat paragraf! masing-masing paragraf membutuhkan tag pembuka dan penutup: <code>&lt;p&gt;</code> dan <code>&lt;/p&gt;</code>. Kita meletakkan konten di antara tag tersebut.</li>
<li>Antara tag <code>&lt;body&gt;</code>, buat 2 paragraf dan tulis konten di masing paragraf. (Ini akan membutuhkan 2 pasang tag <code>&lt;p&gt;</code>)</li>
</ol>


<h3>Jawaban</h3>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;title&gt;
    Belajar Paragraf
    &lt;/title&gt;

&lt;/head&gt;

&lt;body&gt;
    &lt;p&gt;Paragraf 1&lt;/p&gt;
    &lt;p&gt;Paragraf 2&lt;/p&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>
]]></content>
  </entry>
  
</feed>
