<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Hendry Suwanda]]></title>
  <link href="http://hendrysuwanda.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://hendrysuwanda.github.io/"/>
  <updated>2014-01-11T08:55:03-05:00</updated>
  <id>http://hendrysuwanda.github.io/</id>
  <author>
    <name><![CDATA[Hendry Suwanda]]></name>
    <email><![CDATA[suwanda.hendry@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Error 'Unable to open logs' ketika menjalankan httpd]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/10/04/error-unable-to-open-logs-ketika-menjalankan-httpd/"/>
    <updated>2013-10-04T11:13:00-04:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/10/04/error-unable-to-open-logs-ketika-menjalankan-httpd</id>
    <content type="html"><![CDATA[<p>Hari ini ada masalah di production. Teman melakukan restart server production, tapi yg sialnya tidak ada yg tau kalau ada proxy/web server sebelum akses user di lanjutkan ke tomcat.</p>

<p>Proxy/web server yg kami gunakan adalah httpd. Tapi ketika di jalankan dengan menggunakan command</p>

<p><code>
service httpd start
</code></p>

<p>muncul error</p>

<p>```
Starting httpd: no listening sockets available, shutting down</p>

<p>Unable to open logs
```</p>

<p>Ritual pertama yg saya lakukan, check apakah port 80 lagi di pakai oleh service lain dengan menggunakan command</p>

<p><code>
netstat -npl | grep 80
</code></p>

<p>hasilnya</p>

<p><code>
tcp        0      0 ::ffff:127.0.0.1:8005       :::*                        LISTEN      2750/java
tcp        0      0 :::8009                     :::*                        LISTEN      2750/java
tcp        0      0 :::8080                     :::*                        LISTEN      2750/java
tcp        0      0 :::80                       :::*                        LISTEN      1502/httpd
</code></p>

<p>dari hasil diatas, ternyata port 80 lagi digunakan oleh <code>httpd</code>. Ternyata <code>httpd</code> dalam keadaan deadlock, walaupun sudah membuka port 80, tapi kita tetap tidak bisa akses.</p>

<p>Ok, ritual kedua, kita stop httpd dengan menjalankan command</p>

<p><code>
service httpd stop
</code></p>

<p>hasilnya</p>

<p><code>
FAILED
</code></p>

<p>mantap. ternyata <code>httpd</code> benar2 dalam keadaan deadlock/hang. jalan satu2nya kita kill proses <code>httpd</code> tersebut.</p>

<p>Untuk kill proses httpd, sebelumnya kita mesti tahu dulu prosess id nya, dengan menjalankan command</p>

<p><code>
ps ax | grep httpd
</code></p>

<p>hasilnya</p>

<p><code>
1501 ?        S      0:00 /bin/bash -c ulimit -S -c 0 &gt;/dev/null 2&gt;&amp;1 ; /usr/sbin/httpd
1502 ?        S      0:00 /usr/sbin/httpd
4713 pts/0    S+     0:00 grep httpd
</code></p>

<p>Bisa kita lihat, ada 3 prosess yang mengandung kata httpd. Sekarang jalankan command berikut untuk melakukan kill prosess tersebut</p>

<p><code>
$ kill -9 1501
$ kill -9 1502
</code></p>

<p>Lalu jalankan lagi command berikut</p>

<p><code>
service httpd start
</code></p>

<p>untuk menjalankan httpd kembali.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List File/Directory dalam bentuk tree di crunchbang]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/10/04/list-file-slash-directory-dalam-bentuk-tree-di-crunchbang/"/>
    <updated>2013-10-04T10:38:00-04:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/10/04/list-file-slash-directory-dalam-bentuk-tree-di-crunchbang</id>
    <content type="html"><![CDATA[<p>Saya selalu melihat di video tutorial yg menggunakan *nix, mereka selalu list file/directory dalam bentuk seperti ini</p>

<p><img src="/images/linux/list-files-in-tree.png"></p>

<p>setelah google, ternyata mereka menggunakan <code>tree</code>.
Untuk menginstall <code>tree</code> di crunchbang/debian, gunakan command berikut</p>

<p>```sh
$ sudo apt-get install tree
[sudo] password for marjinal:
Reading package lists&hellip; Done
Building dependency tree
Reading state information&hellip; Done
The following NEW packages will be installed:</p>

<pre><code>tree
</code></pre>

<p>0 upgraded, 1 newly installed, 0 to remove and 200 not upgraded.
Need to get 32.4 kB of archives.
After this operation, 98.3 kB of additional disk space will be used.
Get:1 <a href="http://ftp.debian.org/debian/">http://ftp.debian.org/debian/</a> squeeze/main tree amd64 1.5.3-1 [32.4 kB]
Fetched 32.4 kB in 6s (5,168 B/s)
Selecting previously deselected package tree.
(Reading database &hellip; 112215 files and directories currently installed.)
Unpacking tree (from &hellip;/tree_1.5.3-1_amd64.deb) &hellip;
Processing triggers for man-db &hellip;
Setting up tree (1.5.3-1) &hellip;
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cara Menampilkan Versi Package, Kernel, Debian dan Crunchbang]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/03/17/cara-menampilkan-versi-package-kernel-debian-dan-crunchbang/"/>
    <updated>2013-03-17T06:04:00-04:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/03/17/cara-menampilkan-versi-package-kernel-debian-dan-crunchbang</id>
    <content type="html"><![CDATA[<p>Berikut cara menampilkan versi dari package, kernel, debian, maupun crunchbang yang terinstall di environment kita.</p>

<h3>Package</h3>

<blockquote><blockquote><p>Cara ini hanya berjalan di linux turunan debian</p></blockquote></blockquote>

<p>Ketikkan perintah berikut, untuk mengetahui versi dari package yang sudah terinstall di environment kita, ganti <code>&lt;package_name&gt;</code> dengan package yang di inginkan</p>

<p><code>
dpkg -l | grep &lt;package_name&gt;
</code></p>

<p>contoh</p>

<p><code>
dpkg -l | grep libc6
</code></p>

<p>di environment saya akan menampilkan hasil seperti di bawah ini</p>

<p><code>
ii  libc6                    2.11.3-4           Embedded GNU C Library: Shared libraries
ii  libc6-dev                2.11.3-4           Embedded GNU C Library: Development Libraries and Header Files
</code></p>

<h3>Kernel</h3>

<p>Ada 2 cara untuk mengetahui versi kernel yang kita gunakan. Pertama, dengan mengetikkan perintah berikut:</p>

<p><code>
uname -a
</code></p>

<p>Perintah di atas, akan mencetak semua informasi dari kernel yang kita gunakan, di environment saya, menampilkan</p>

<p><code>
Linux marjinal 2.6.32-5-amd64 #1 SMP Mon Jan 16 16:22:28 UTC 2012 x86_64 GNU/Linux
</code></p>

<p>Kedua, dengan mengetikkan perintah berikut:</p>

<p><code>
uname -r
</code></p>

<p>Perintah diatas, hanya akan mencetak versi dari kernel, di environment saya, menampilkan</p>

<p><code>
2.6.32-5-amd64
</code></p>

<p>Cara kedua, sangat bermanfaat, jika kita ingin mengintall package yang membutuhkan versi kernel, contoh, <code>kernel header</code>, sehingga kita dapat mengetikkan</p>

<p><code>
apt-get install linux-headers-$(uname -r)
</code></p>

<h3>Debian</h3>

<p>Untuk mengetahui versi debian, ketikkan perintah berikut</p>

<p><code>
cat /etc/debian_version
</code></p>

<p>di environment saya menampilkan</p>

<p><code>
6.0.4
</code></p>

<h3>Crunchbang</h3>

<p>Untuk mengetahui versi Crunchbang, ketikkan perintah berikut</p>

<p><code>
cat /etc/lsb-release-crunchbang
</code>
di environment saya menampilkan</p>

<p><code>
DISTRIB_ID=CrunchBang
DISTRIB_RELEASE=10
DISTRIB_CODENAME=statler
DISTRIB_DESCRIPTION="CrunchBang 10 statler"
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat SSL Certificate di Apache/Crunchbang Linux]]></title>
    <link href="http://hendrysuwanda.github.io/blog/2013/03/10/membuat-ssl-certificate-di-apache-slash-crunchbang-linux/"/>
    <updated>2013-03-10T10:20:00-04:00</updated>
    <id>http://hendrysuwanda.github.io/blog/2013/03/10/membuat-ssl-certificate-di-apache-slash-crunchbang-linux</id>
    <content type="html"><![CDATA[<h2>Tentang SSL Certificate</h2>

<p>SSL Certificate adalah cara untuk mengenkripsi informasi situs dan membuat koneksi yang lebih aman. Selain itu, sertifikat dapan menunjukkan informasi identifikasi <em>virtual private server</em> untuk pengunjung situs.</p>

<h2>Langkah 1 &ndash; Mengaktifkan SSL Module</h2>

<p>Untuk mengaktifkan <em>SSL Module</em> ketikkan perintah berikut:</p>

<p><code>
sudo a2enmod ssl
</code></p>

<p>Setelah itu, restart apache:</p>

<p><code>
sudo /etc/init.d/apache2 restart
</code></p>

<h2>Langkah 2 &ndash; Buat direktori baru</h2>

<p>Kita butuh membuat direktory baru untuk menyimpan key dan cerfiticate server.</p>

<p><code>
sudo mkdir /etc/apache2/ssl
</code></p>

<h2>Langkah 3 &ndash; Membuat Self Signed SSL Certificate</h2>

<p>Untuk membuat sertifikat yang baru, ketikkan perintah di bawah ini. Kita dapat menentukan berapa lama sertifikat tersebut seharusnya tetap berlaku dengan mengubah 365 dengan jumlah hari yang kita inginkan.</p>

<p>```
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt</p>

<p>```</p>

<p>Perintah di atas akan membuat key &amp; sertifikat ke dalam direktori yang baru kita buat di langkah 2.</p>

<p>Perintah ini akan menampilkan field2 yang harus kita isikan, seperti di bawah ini (isi sesuai dengan keinginan kita):</p>

<p>```
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,</p>

<h2>If you enter &lsquo;.&rsquo;, the field will be left blank.</h2>

<p>Country Name (2 letter code) [AU]:ID
State or Province Name (full name) [Some-State]:Jakarta
Locality Name (eg, city) []:Jakarta Selatan
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Hendry Suwanda
Organizational Unit Name (eg, section) []:&ndash;
Common Name (e.g. server FQDN or YOUR name) []:www.hendrysuwanda.com
Email Address []:<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#115;&#117;&#x77;&#97;&#110;&#x64;&#x61;&#x2e;&#x68;&#101;&#110;&#100;&#x72;&#x79;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;">&#x73;&#x75;&#x77;&#97;&#x6e;&#100;&#x61;&#x2e;&#104;&#101;&#x6e;&#x64;&#x72;&#121;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>

<p>```</p>

<h3>Langkah 4 &ndash; Setup Sertifikat</h3>

<p>Buka file SSL config dengan mengetikan perintah berikut:</p>

<p><code>
sudo vi /etc/apache2/sites-available/default
</code></p>

<p>tambahkan settingan seperti di bawah ini:</p>

<p>```
<VirtualHost *:443></p>

<pre><code>ServerName www.hendrysuwanda.com:443

SSLEngine on
SSLCertificateFile /etc/apache2/ssl/apache.crt
SSLCertificateKeyFile /etc/apache2/ssl/apache.key
</code></pre>

<p></VirtualHost>
```</p>

<h3>Langkah 5 &ndash; Mengaktifkan VirtualHost baru</h3>

<p>Untuk mengaktifkan VirtualHost yang baru kita buat, ketikkan perintah berikut:</p>

<p><code>
sudo a2ensite default
</code></p>

<p>Lalu restart service apache, dengan mengetikkan perintah:</p>

<p><code>
sudo /etc/init.d/apache2 restart
</code></p>

<p>Selesai, SSL Certificate sudah terpasang, untuk mencoba nya silahkan buka link <a href="https://localhost">https://localhost</a> (address)</p>
]]></content>
  </entry>
  
</feed>
